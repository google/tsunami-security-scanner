/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Data models for describing a network service.
syntax = "proto3";

package tsunami.proto;

import "network.proto";
import "software.proto";
import "web_crawl.proto";

option java_multiple_files = true;
option java_outer_classname = "NetworkServiceProtos";
option java_package = "com.google.tsunami.proto";
option go_package = "github.com/google/tsunami-security-scanner/proto";

// General information about a network service running on a target.
message NetworkService {
  // The network endpoint where this network service is served.
  NetworkEndpoint network_endpoint = 1;

  // The transport layer protocol used by the service.
  TransportProtocol transport_protocol = 2;

  // The name of the network service, following convention in RFC6335. Examples
  // are like http, telnet, ssh, etc.
  string service_name = 3;

  // The software that provides the service behind the port.
  Software software = 4;

  // The complete set of versions of the software.
  VersionSet version_set = 5;

  // Banners generated by the service.
  repeated string banner = 6;

  // Context information about this network service.
  ServiceContext service_context = 7;

  // The cpe identifying the service
  string cpe_uri = 8;

  // TODO(magl): add ssl related information.
}

// Context information about a specific network service.
message ServiceContext {
  oneof context {
    WebServiceContext web_service_context = 1;
  }
}

// Context information about a web application.
// NEXT ID: 5
message WebServiceContext {
  // The root path of the hosted web application.
  string application_root = 1;

  // The web application that is serving under the application root.
  Software software = 2;

  // The detected versions of the web application.
  VersionSet version_set = 3;

  // Fingerprinter's crawling results for this web service.
  repeated CrawlResult crawl_results = 4;
}
